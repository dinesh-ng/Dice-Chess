.face {
  margin: auto;
  height: 100px;
  width: 100px;
  background-color: black;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  border-radius: 10px;
}
.knight {
  background-image: url("img/chesspieces/wikipedia/wN.png");
}
.king {
  background-image: url("img/chesspieces/wikipedia/wK.png");
}
.queen {
  background-image: url("img/chesspieces/wikipedia/wQ.png");
}
.bishop {
  background-image: url("img/chesspieces/wikipedia/wB.png");
}
.pawn {
  background-image: url("img/chesspieces/wikipedia/wP.png");
}
.rook {
  background-image: url("img/chesspieces/wikipedia/wR.png");
}
/* body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #70c1b3;
} */

button {
  position: relative;
  top: 80px;
  left: 10px;
  padding: 15px 50px;
  color: #fff;
  background-color: #f4d35e;
  border: none;
  font-size: 20px;
  border-radius: 20px;
  box-shadow: 1px 3px #50514f;
  outline: none;
  transition: 0.3s;
}

button:hover,
button:active {
  outline: none;
  background: #50514f;
  cursor: pointer;
  transform: translateY(15px);
}

.game {
  position: relative;
  display: inline-block;
  width: auto;
  height: 100%;
  top: -315px;
  left: -128px;
}
#dice {
  width: 100px;
  height: 100px;
  /* Position the children of #dice in the 3D space: */
  transform-style: preserve-3d;
  transition: transform 1.5s ease;
}

/* Adding a little transparent shade near the dice...just because I was having fun messing with the Z axis. */
.shade {
  border-radius: 50%;
  opacity: 0.5;
  position: absolute;
  background: linear-gradient(linen, gray, linen);
  width: 100%;
  height: 100%;
  transform: translateZ(145px);
}

.sides {
  border-radius: 15px;
  background-color: linen;
  position: absolute;
  width: 100%;
  height: 100%;
}

.dot {
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: radial-gradient(linen, black, linen);
  transform: translate(-50%, -50%);
}

/* The placement of each dot: */
/* Dot 1 from slide 1: */
.side-1 .dot-1 {
  top: 50%;
  left: 50%;
}
/* Dot 1 from slide 2: */
.side-2 .dot-1 {
  top: 25%;
  left: 25%;
}
/*...and so on: */
.side-2 .dot-2 {
  top: 75%;
  left: 75%;
}
.side-3 .dot-1 {
  top: 25%;
  left: 25%;
}
.side-3 .dot-2 {
  top: 75%;
  left: 75%;
}
.side-3 .dot-3 {
  top: 50%;
  left: 50%;
}
.side-4 .dot-1 {
  top: 25%;
  left: 25%;
}
.side-4 .dot-2 {
  top: 25%;
  left: 75%;
}
.side-4 .dot-3 {
  top: 75%;
  left: 25%;
}
.side-4 .dot-4 {
  top: 75%;
  left: 75%;
}
.side-5 .dot-1 {
  top: 25%;
  left: 25%;
}
.side-5 .dot-2 {
  top: 25%;
  left: 75%;
}
.side-5 .dot-3 {
  top: 75%;
  left: 25%;
}
.side-5 .dot-4 {
  top: 75%;
  left: 75%;
}
.side-5 .dot-5 {
  top: 50%;
  left: 50%;
}
.side-6 .dot-1 {
  top: 25%;
  left: 25%;
}
.side-6 .dot-2 {
  top: 25%;
  left: 75%;
}
.side-6 .dot-3 {
  top: 75%;
  left: 25%;
}
.side-6 .dot-4 {
  top: 75%;
  left: 75%;
}
.side-6 .dot-5 {
  top: 50%;
  left: 25%;
}
.side-6 .dot-6 {
  top: 50%;
  left: 75%;
}

/* How does a cube look? */
.side-1 {
  transform: translateZ(45px);
}
.side-2 {
  transform: rotateX(-180deg) translateZ(45px);
}
.side-3 {
  transform: rotateY(90deg) translateZ(45px);
}
.side-4 {
  transform: rotateY(-90deg) translateZ(45px);
}
.side-5 {
  transform: rotateX(90deg) translateZ(45px);
}
.side-6 {
  transform: rotateX(-90deg) translateZ(45px);
}

/* Cube's default mode in space: */
#dice[data-side="1"] {
  transform: rotateX(260deg) rotateY(360deg) rotateZ(720deg);
}
#dice[data-side="2"] {
  transform: rotateX(360deg) rotateY(540deg) rotateZ(720deg);
}
#dice[data-side="3"] {
  transform: rotateX(360deg) rotateY(630deg) rotateZ(720deg);
}
#dice[data-side="4"] {
  transform: rotateX(360deg) rotateY(450deg) rotateZ(720deg);
}
#dice[data-side="5"] {
  transform: rotateX(630deg) rotateY(360deg) rotateZ(720deg);
}
#dice[data-side="6"] {
  transform: rotateX(450deg) rotateY(360deg) rotateZ(720deg);
}

/* What happens when the reRoll class is added after the dice is clicked: */
#dice[data-side="1"].roll {
  transform: rotateX(0deg) rotateY(180deg) rotateZ(0deg);
}
#dice[data-side="2"].roll {
  transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
}

#dice[data-side="3"].roll {
  transform: rotateX(0deg) rotateY(90deg) rotateZ(0deg);
}
#dice[data-side="4"].roll {
  transform: rotateX(0deg) rotateY(270deg) rotateZ(0deg);
}
#dice[data-side="5"].roll {
  transform: rotateX(90deg) rotateY(0deg) rotateZ(0deg);
}
#dice[data-side="6"].roll {
  transform: rotateX(270deg) rotateY(0deg) rotateZ(0deg);
}

/*
~ Adding some transparency so you can take a peek at the front slide.
~ hsla() expresses a given color according to its hue, saturation, and lightness.
*/
.sides:hover {
  background: hsla(98, 94%, 92%, 0.8);
}
#dice:hover {
  cursor: pointer;
}
